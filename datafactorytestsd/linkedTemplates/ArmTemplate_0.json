{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "datafactorytestsd"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"CosmosDbMongoDb1_SinkDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbMongoDb1_SinkDB'"
		},
		"CosmosDbMongoDb1_SinkDB_account": {
			"type": "secureString",
			"metadata": "Secure string for 'account' of 'CosmosDbMongoDb1_SinkDB'",
			"defaultValue": "mongodb-test-sarah"
		},
		"CosmosDbNSource_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CosmosDbNSource'"
		},
		"MongoDBSource_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'MongoDBSource'"
		},
		"MongoDBSource_account": {
			"type": "secureString",
			"metadata": "Secure string for 'account' of 'MongoDBSource'",
			"defaultValue": "mongodb-test-sarah"
		},
		"CosmosDbMongoDb1_SinkDB_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SampleDB"
		},
		"MongoDBSource_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "SampleDB"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDb1_SinkDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDbMongoDbApi",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbMongoDb1_SinkDB_connectionString')]",
					"account": {
						"type": "SecureString",
						"value": "[parameters('CosmosDbMongoDb1_SinkDB_account')]"
					},
					"database": "[parameters('CosmosDbMongoDb1_SinkDB_properties_typeProperties_database')]",
					"isServerVersionAbove32": true
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbNSource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDb",
				"typeProperties": {
					"connectionString": "[parameters('CosmosDbNSource_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MongoDBSource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "CosmosDbMongoDbApi",
				"typeProperties": {
					"connectionString": "[parameters('MongoDBSource_connectionString')]",
					"account": {
						"type": "SecureString",
						"value": "[parameters('MongoDBSource_account')]"
					},
					"database": "[parameters('MongoDBSource_properties_typeProperties_database')]",
					"isServerVersionAbove32": true
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDbCollection1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbMongoDb1_SinkDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbMongoDbApiCollection",
				"schema": [],
				"typeProperties": {
					"collection": "storage_sink_1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbMongoDb1_SinkDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDbCollection_Source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MongoDBSource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbMongoDbApiCollection",
				"schema": [],
				"typeProperties": {
					"collection": "SampleCollection"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/MongoDBSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbMongoDb_Sync')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbMongoDb1_SinkDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbMongoDbApiCollection",
				"schema": [],
				"typeProperties": {
					"collection": "Sync_MongoDB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbMongoDb1_SinkDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CosmosDbNoSqlContainer1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CosmosDbNSource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "CosmosDbSqlApiCollection",
				"schema": {
					"type": "object",
					"properties": {
						"ProcessDataId": {
							"type": "string"
						},
						"chartId": {
							"type": "string"
						},
						"chartPresentation": {
							"type": "string"
						},
						"info": {
							"type": "object",
							"properties": {
								"title": {
									"type": "string"
								},
								"mainTrend": {
									"type": "string"
								}
							}
						},
						"data": {
							"type": "object",
							"properties": {
								"segment": {
									"type": "string"
								},
								"value": {
									"type": "string"
								},
								"segmentationId": {
									"type": "string"
								},
								"confidenceValue": {
									"type": "integer"
								},
								"foConfidenceValue": {
									"type": "integer"
								},
								"scConfidenceValue": {
									"type": "number"
								},
								"soConfidenceValue": {
									"type": "integer"
								},
								"gross_outstanding": {
									"type": "number"
								},
								"premium": {
									"type": "number"
								},
								"class/": {
									"type": "string"
								},
								"line/qa": {
									"type": "string"
								},
								"riskcodes/qa": {
									"type": "string"
								}
							}
						}
					}
				},
				"typeProperties": {
					"collectionName": "Cont1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CosmosDbNSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/storage_dataseT_2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "moviesDB2.csv",
						"container": "mycontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "movies",
						"type": "String"
					},
					{
						"name": "Title",
						"type": "String"
					},
					{
						"name": "genresgenregenre",
						"type": "String"
					},
					{
						"name": "YEAR",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CosmosDbMongoDbApiSource",
								"batchSize": 100
							},
							"sink": {
								"type": "CosmosDbMongoDbApiSink",
								"writeBatchTimeout": "00:30:00",
								"writeBehavior": "upsert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CosmosDbMongoDbCollection_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbMongoDb_Sync",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CosmosDbMongoDbCollection_Source')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbMongoDb_Sync')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "CosmosDbMongoDbApiSink",
								"writeBatchTimeout": "00:30:00",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "storage_dataseT_2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbMongoDbCollection1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/storage_dataseT_2')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbMongoDbCollection1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline6')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "CosmosDbMongoDbApiSource",
								"batchSize": 100
							},
							"sink": {
								"type": "CosmosDbMongoDbApiSink",
								"writeBatchTimeout": "00:30:00",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "CosmosDbMongoDbCollection_Source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CosmosDbMongoDb_Sync",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CosmosDbMongoDbCollection_Source')]",
				"[concat(variables('factoryId'), '/datasets/CosmosDbMongoDb_Sync')]"
			]
		}
	]
}